// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ButtonDanger> global render should render 1`] = `
.c1 {
  font-family: 'Source Sans Pro',Helvetica,Arial,sans-serif;
  font-weight: 500;
  line-height: 1.125rem;
  font-size: 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  height: 32px;
  color: #ffffff;
  background-color: #ff002d;
  cursor: pointer;
  border: solid transparent;
  border-width: 1px;
  border-radius: 4px;
  line-height: 1.75;
  padding: 0 16px;
  min-width: 64px;
  font-family: 'Source Sans Pro',Helvetica,Arial,sans-serif;
  font-weight: 600;
  font-size: 16px;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 0;
}

.c0:hover {
  color: #ffffff;
  border-color: transparent;
  background-color: #8b0018;
  -webkit-transition: border-color 0.1s ease-in-out,background-color 0.1s ease-in-out;
  transition: border-color 0.1s ease-in-out,background-color 0.1s ease-in-out;
}

.c0:active {
  color: #ffffff;
  border-color: transparent;
  background-color: #8b0018;
  -webkit-transition: color 0.1s ease-in-out,background-color 0.1s ease-in-out;
  transition: color 0.1s ease-in-out,background-color 0.1s ease-in-out;
}

.c0:disabled span {
  pointer-events: none;
}

.c0:disabled:hover {
  border-color: transparent;
}

<ButtonDanger>
  <Component
    colors={
      Object {
        "background": Object {
          "primary": "#ff002d",
          "secondary": "#8b0018",
          "tertiary": "#ffe3dd",
        },
        "border": Object {
          "primary": undefined,
          "secondary": "#ff002d",
        },
        "text": Object {
          "primary": "#ffffff",
          "secondary": "#ff002d",
        },
      }
    }
  >
    <BaseButton
      theme={
        Object {
          "active": Object {
            "background": "#8b0018",
            "border": undefined,
          },
          "background": "#ff002d",
          "color": "#ffffff",
          "disabled": Object {
            "background": "#ffe3dd",
            "color": "#ffffff",
          },
          "hover": Object {
            "background": "#8b0018",
          },
        }
      }
    >
      <styled.button
        theme={
          Object {
            "active": Object {
              "background": "#8b0018",
              "border": undefined,
            },
            "background": "#ff002d",
            "color": "#ffffff",
            "disabled": Object {
              "background": "#ffe3dd",
              "color": "#ffffff",
            },
            "hover": Object {
              "background": "#8b0018",
            },
          }
        }
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "hncvbS",
                "rules": Array [
                  "
  height: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  background-color: ",
                  [Function],
                  ";
  cursor: ",
                  [Function],
                  ";
  border: solid ",
                  "transparent",
                  ";
  border-width: ",
                  [Function],
                  ";
  border-radius: 4px;
  line-height: 1.75;
  padding: ",
                  [Function],
                  ";
  min-width: 64px;
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  font-weight: 600;
  font-size: ",
                  [Function],
                  ";
  display: inline-flex;
  position: relative;
  align-items: center;
  justify-content: center;
  outline: 0;
  &:hover {
    color: ",
                  [Function],
                  ";
    border-color: ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
    transition: border-color 0.1s ease-in-out, background-color 0.1s ease-in-out;
  }
  &:active {
    color: ",
                  [Function],
                  ";
    border-color: ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
    transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out;
  }

  &:disabled {
    span {
      pointer-events: none;
    }
    &:hover {
      border-color: ",
                  "transparent",
                  ";
    }
  }
",
                ],
              },
              "displayName": "styled.button",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          theme={
            Object {
              "active": Object {
                "background": "#8b0018",
                "border": undefined,
              },
              "background": "#ff002d",
              "color": "#ffffff",
              "disabled": Object {
                "background": "#ffe3dd",
                "color": "#ffffff",
              },
              "hover": Object {
                "background": "#8b0018",
              },
            }
          }
        >
          <button
            className="c0"
          >
            <styled.span>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  ",
                        "
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
",
                        "
  font-weight: 500;
  line-height: 1.125rem;
  font-size: ",
                        [Function],
                        ";
  display: flex;
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <span
                  className="c1"
                >
                  Default
                </span>
              </StyledComponent>
            </styled.span>
          </button>
        </StyledComponent>
      </styled.button>
    </BaseButton>
  </Component>
</ButtonDanger>
`;

exports[`<ButtonDanger> global render should render 2`] = `
.c1 {
  font-family: 'Source Sans Pro',Helvetica,Arial,sans-serif;
  font-weight: 500;
  line-height: 1.125rem;
  font-size: 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  height: 32px;
  color: #ff002d;
  background-color: transparent;
  cursor: pointer;
  border: solid transparent;
  border-width: 1px;
  border-radius: 4px;
  line-height: 1.75;
  padding: 0 16px;
  min-width: 64px;
  font-family: 'Source Sans Pro',Helvetica,Arial,sans-serif;
  font-weight: 600;
  font-size: 16px;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 0;
}

.c0:hover {
  color: #ff002d;
  border-color: #ff002d;
  background-color: transparent;
  -webkit-transition: border-color 0.1s ease-in-out,background-color 0.1s ease-in-out;
  transition: border-color 0.1s ease-in-out,background-color 0.1s ease-in-out;
}

.c0:active {
  color: #ffffff;
  border-color: transparent;
  background-color: #ff002d;
  -webkit-transition: color 0.1s ease-in-out,background-color 0.1s ease-in-out;
  transition: color 0.1s ease-in-out,background-color 0.1s ease-in-out;
}

.c0:disabled span {
  pointer-events: none;
}

.c0:disabled:hover {
  border-color: transparent;
}

<ButtonDanger
  variant="text"
>
  <Component
    colors={
      Object {
        "background": Object {
          "primary": "#ff002d",
          "secondary": "#8b0018",
          "tertiary": "#ffe3dd",
        },
        "border": Object {
          "primary": undefined,
          "secondary": "#ff002d",
        },
        "text": Object {
          "primary": "#ffffff",
          "secondary": "#ff002d",
        },
      }
    }
    variant="text"
  >
    <BaseButton
      theme={
        Object {
          "active": Object {
            "background": "#ff002d",
            "color": "#ffffff",
          },
          "background": "transparent",
          "color": "#ff002d",
          "disabled": Object {
            "color": "#ffe3dd",
          },
          "hover": Object {
            "background": "transparent",
            "border": "#ff002d",
          },
        }
      }
      variant="text"
    >
      <styled.button
        theme={
          Object {
            "active": Object {
              "background": "#ff002d",
              "color": "#ffffff",
            },
            "background": "transparent",
            "color": "#ff002d",
            "disabled": Object {
              "color": "#ffe3dd",
            },
            "hover": Object {
              "background": "transparent",
              "border": "#ff002d",
            },
          }
        }
        variant="text"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
  height: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  background-color: ",
                  [Function],
                  ";
  cursor: ",
                  [Function],
                  ";
  border: solid ",
                  "transparent",
                  ";
  border-width: ",
                  [Function],
                  ";
  border-radius: 4px;
  line-height: 1.75;
  padding: ",
                  [Function],
                  ";
  min-width: 64px;
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  font-weight: 600;
  font-size: ",
                  [Function],
                  ";
  display: inline-flex;
  position: relative;
  align-items: center;
  justify-content: center;
  outline: 0;
  &:hover {
    color: ",
                  [Function],
                  ";
    border-color: ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
    transition: border-color 0.1s ease-in-out, background-color 0.1s ease-in-out;
  }
  &:active {
    color: ",
                  [Function],
                  ";
    border-color: ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
    transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out;
  }

  &:disabled {
    span {
      pointer-events: none;
    }
    &:hover {
      border-color: ",
                  "transparent",
                  ";
    }
  }
",
                ],
              },
              "displayName": "styled.button",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          theme={
            Object {
              "active": Object {
                "background": "#ff002d",
                "color": "#ffffff",
              },
              "background": "transparent",
              "color": "#ff002d",
              "disabled": Object {
                "color": "#ffe3dd",
              },
              "hover": Object {
                "background": "transparent",
                "border": "#ff002d",
              },
            }
          }
          variant="text"
        >
          <button
            className="c0"
          >
            <styled.span>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  ",
                        "
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
",
                        "
  font-weight: 500;
  line-height: 1.125rem;
  font-size: ",
                        [Function],
                        ";
  display: flex;
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <span
                  className="c1"
                >
                  Default
                </span>
              </StyledComponent>
            </styled.span>
          </button>
        </StyledComponent>
      </styled.button>
    </BaseButton>
  </Component>
</ButtonDanger>
`;
